use predicates as knowledge.
use actions as actionspec.
use DUWOgoals as goals.
use normalMod as module.
use lowBudgetMod as module.
use noBudgetMod as module.
use demolishMod as module.

order=linearall.
exit=nogoals.

module DUWO {
	
	% Demolish all unnecessary buildings
	%forall bel(nonStudentBuilding(Bid,Name, 'GARDEN'),not(cleaned)) do building_plan_demolish(Bid).
	if goal(goalDemolish) 
		then demolishMod.
			
	% Mark the map cleaned when these buildings are gone so the demolishing only happens once.
	if not(bel(cleaned)) then insert(cleaned).
	
	% Build student housing when have it as goal.
	% Use the normal module when we have enough budget
	if not(bel(lowBudget)), not(bel(noBudget))
		then normalMod.
	
	% Use the lowBudget module when our budget is lower than a certain threshold above the target budget
	if bel(lowBudget), not(bel(noBudget))
		then lowBudgetMod.
	
	% Use the noBudget module when our current budget is beneath our budget target
	if bel(lowBudget), bel(noBudget)
		then noBudgetMod.
}
