use "../DUWOagent/normalMod"as module.
use "../DUWOagent/demolishMod"as module.
use "../DUWOagent/DUWOagent" as mas.
use "../DUWOagent/predicates" as knowledge.
use "../DUWOagent/actions" as actionspec.
use "../DUWOagent/perceptEvents" as module.
use "../DUWOagent/DUWO" as module.
use "../DUWOagent/events" as module.

timeout=20.

test events with
	%If possible add a pre to check if percept something
	pre{
		percept(indicators(_), stakeholders(_), settings(_),
		functions(_),buildings(_))
	}
	
	in {
		%Check if indicators are at least of these types.
		eventually bel(indicator(ID,_,_),indicatorWeight(ID,Name,_),
			(Name == 'Ruimtelijke kwaliteit';
		 	Name == 'Bouw DUWO';
		 	Name == 'Budget DUWO';
		 	Name == 'Afstand TUDelft';
		 	Name == 'Variatie Woonruimte')).
		
		%Check if we have all our indicators.
		never bel(indicator(ID,_,_),indicatorWeight(ID,Name,_),
		 	not( (Name == 'Ruimtelijke kwaliteit';
		 	Name == 'Bouw DUWO';
		 	Name == 'Budget DUWO';
		 	Name == 'Afstand TUDelft';
		 	Name == 'Variatie Woonruimte'))).
		
		% Check if we have at least one function.
		eventually bel(functions([_|_])).
		
		% Check if we have at least one setting.
		eventually bel(settings([_|_])).
		
		% Check if we have at least one building.
		eventually bel(buildings([_|_])).
		
		% Check if we have at least one zone.
		eventually bel(zones([_|_])).
		
		% Check if we percepted the my_stakeholder_id percept.
		eventually bel(self(_)).
	}
	post{ }

DUWOAgent {
	do DUWO.
}
